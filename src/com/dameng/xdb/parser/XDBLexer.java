// Generated from XDB.g4 by ANTLR 4.4

	package com.dameng.xdb.parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class XDBLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__8=1, T__7=2, T__6=3, T__5=4, T__4=5, T__3=6, T__2=7, T__1=8, T__0=9, 
		KW_HELP=10, KW_LOGIN=11, KW_LOGOUT=12, KW_EXIT=13, KW_PUT=14, KW_GET=15, 
		KW_SET=16, KW_REMOVE=17, KW_SHOW=18, KW_NODE=19, KW_LINK=20, KW_TOP=21, 
		IP=22, NUMBERIC=23, DECIMAL=24, STRING=25, BOOLEAN=26, IDENTIFIER=27, 
		LINE_COMMENT=28, COMMENT=29, WS=30, DIGIT=31, LETTER=32, A=33, B=34, C=35, 
		D=36, E=37, F=38, G=39, H=40, I=41, J=42, K=43, L=44, M=45, N=46, O=47, 
		P=48, Q=49, R=50, S=51, T=52, U=53, V=54, W=55, X=56, Y=57, Z=58, OTHER=59;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'"
	};
	public static final String[] ruleNames = {
		"T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", 
		"KW_HELP", "KW_LOGIN", "KW_LOGOUT", "KW_EXIT", "KW_PUT", "KW_GET", "KW_SET", 
		"KW_REMOVE", "KW_SHOW", "KW_NODE", "KW_LINK", "KW_TOP", "IP", "NUMBERIC", 
		"DECIMAL", "STRING", "BOOLEAN", "IDENTIFIER", "LINE_COMMENT", "COMMENT", 
		"WS", "DIGIT", "LETTER", "A", "B", "C", "D", "E", "F", "G", "H", "I", 
		"J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", 
		"X", "Y", "Z", "OTHER"
	};


	public XDBLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "XDB.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2=\u0192\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2\3"+
		"\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3"+
		"\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3"+
		"\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3"+
		"\26\3\26\3\27\6\27\u00ca\n\27\r\27\16\27\u00cb\3\27\3\27\6\27\u00d0\n"+
		"\27\r\27\16\27\u00d1\3\27\3\27\6\27\u00d6\n\27\r\27\16\27\u00d7\3\27\3"+
		"\27\6\27\u00dc\n\27\r\27\16\27\u00dd\3\30\6\30\u00e1\n\30\r\30\16\30\u00e2"+
		"\3\30\3\30\6\30\u00e7\n\30\r\30\16\30\u00e8\5\30\u00eb\n\30\3\31\7\31"+
		"\u00ee\n\31\f\31\16\31\u00f1\13\31\3\31\3\31\6\31\u00f5\n\31\r\31\16\31"+
		"\u00f6\3\31\3\31\7\31\u00fb\n\31\f\31\16\31\u00fe\13\31\3\31\3\31\6\31"+
		"\u0102\n\31\r\31\16\31\u0103\5\31\u0106\n\31\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\7\32\u010e\n\32\f\32\16\32\u0111\13\32\3\32\3\32\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\5\33\u0120\n\33\3\34\3\34\3\34"+
		"\7\34\u0125\n\34\f\34\16\34\u0128\13\34\3\34\3\34\3\34\3\34\7\34\u012e"+
		"\n\34\f\34\16\34\u0131\13\34\3\34\3\34\5\34\u0135\n\34\3\35\3\35\3\35"+
		"\3\35\7\35\u013b\n\35\f\35\16\35\u013e\13\35\3\35\5\35\u0141\n\35\3\35"+
		"\3\35\3\35\3\35\3\36\3\36\3\36\3\36\7\36\u014b\n\36\f\36\16\36\u014e\13"+
		"\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3"+
		"#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3."+
		"\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65"+
		"\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\5\u010f\u013c\u014c"+
		"\2=\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8o9q:s;u<w=\3\2\37\5\2\13\f\17\17\"\"\3\2\62;\6\2%&C\\aac|\4\2CCcc\4"+
		"\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLl"+
		"l\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2"+
		"UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\u01a9\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2"+
		"\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5{"+
		"\3\2\2\2\7}\3\2\2\2\t\177\3\2\2\2\13\u0081\3\2\2\2\r\u0083\3\2\2\2\17"+
		"\u0085\3\2\2\2\21\u0087\3\2\2\2\23\u0089\3\2\2\2\25\u008b\3\2\2\2\27\u0090"+
		"\3\2\2\2\31\u0096\3\2\2\2\33\u009d\3\2\2\2\35\u00a2\3\2\2\2\37\u00a6\3"+
		"\2\2\2!\u00aa\3\2\2\2#\u00ae\3\2\2\2%\u00b5\3\2\2\2\'\u00ba\3\2\2\2)\u00bf"+
		"\3\2\2\2+\u00c4\3\2\2\2-\u00c9\3\2\2\2/\u00ea\3\2\2\2\61\u0105\3\2\2\2"+
		"\63\u0107\3\2\2\2\65\u011f\3\2\2\2\67\u0134\3\2\2\29\u0136\3\2\2\2;\u0146"+
		"\3\2\2\2=\u0154\3\2\2\2?\u0158\3\2\2\2A\u015a\3\2\2\2C\u015c\3\2\2\2E"+
		"\u015e\3\2\2\2G\u0160\3\2\2\2I\u0162\3\2\2\2K\u0164\3\2\2\2M\u0166\3\2"+
		"\2\2O\u0168\3\2\2\2Q\u016a\3\2\2\2S\u016c\3\2\2\2U\u016e\3\2\2\2W\u0170"+
		"\3\2\2\2Y\u0172\3\2\2\2[\u0174\3\2\2\2]\u0176\3\2\2\2_\u0178\3\2\2\2a"+
		"\u017a\3\2\2\2c\u017c\3\2\2\2e\u017e\3\2\2\2g\u0180\3\2\2\2i\u0182\3\2"+
		"\2\2k\u0184\3\2\2\2m\u0186\3\2\2\2o\u0188\3\2\2\2q\u018a\3\2\2\2s\u018c"+
		"\3\2\2\2u\u018e\3\2\2\2w\u0190\3\2\2\2yz\7\61\2\2z\4\3\2\2\2{|\7B\2\2"+
		"|\6\3\2\2\2}~\7*\2\2~\b\3\2\2\2\177\u0080\7+\2\2\u0080\n\3\2\2\2\u0081"+
		"\u0082\7<\2\2\u0082\f\3\2\2\2\u0083\u0084\7=\2\2\u0084\16\3\2\2\2\u0085"+
		"\u0086\7}\2\2\u0086\20\3\2\2\2\u0087\u0088\7.\2\2\u0088\22\3\2\2\2\u0089"+
		"\u008a\7\177\2\2\u008a\24\3\2\2\2\u008b\u008c\5Q)\2\u008c\u008d\5K&\2"+
		"\u008d\u008e\5Y-\2\u008e\u008f\5a\61\2\u008f\26\3\2\2\2\u0090\u0091\5"+
		"Y-\2\u0091\u0092\5_\60\2\u0092\u0093\5O(\2\u0093\u0094\5S*\2\u0094\u0095"+
		"\5]/\2\u0095\30\3\2\2\2\u0096\u0097\5Y-\2\u0097\u0098\5_\60\2\u0098\u0099"+
		"\5O(\2\u0099\u009a\5_\60\2\u009a\u009b\5k\66\2\u009b\u009c\5i\65\2\u009c"+
		"\32\3\2\2\2\u009d\u009e\5K&\2\u009e\u009f\5q9\2\u009f\u00a0\5S*\2\u00a0"+
		"\u00a1\5i\65\2\u00a1\34\3\2\2\2\u00a2\u00a3\5a\61\2\u00a3\u00a4\5k\66"+
		"\2\u00a4\u00a5\5i\65\2\u00a5\36\3\2\2\2\u00a6\u00a7\5O(\2\u00a7\u00a8"+
		"\5K&\2\u00a8\u00a9\5i\65\2\u00a9 \3\2\2\2\u00aa\u00ab\5g\64\2\u00ab\u00ac"+
		"\5K&\2\u00ac\u00ad\5i\65\2\u00ad\"\3\2\2\2\u00ae\u00af\5e\63\2\u00af\u00b0"+
		"\5K&\2\u00b0\u00b1\5[.\2\u00b1\u00b2\5_\60\2\u00b2\u00b3\5m\67\2\u00b3"+
		"\u00b4\5K&\2\u00b4$\3\2\2\2\u00b5\u00b6\5g\64\2\u00b6\u00b7\5Q)\2\u00b7"+
		"\u00b8\5_\60\2\u00b8\u00b9\5o8\2\u00b9&\3\2\2\2\u00ba\u00bb\5]/\2\u00bb"+
		"\u00bc\5_\60\2\u00bc\u00bd\5I%\2\u00bd\u00be\5K&\2\u00be(\3\2\2\2\u00bf"+
		"\u00c0\5Y-\2\u00c0\u00c1\5S*\2\u00c1\u00c2\5]/\2\u00c2\u00c3\5W,\2\u00c3"+
		"*\3\2\2\2\u00c4\u00c5\5i\65\2\u00c5\u00c6\5_\60\2\u00c6\u00c7\5a\61\2"+
		"\u00c7,\3\2\2\2\u00c8\u00ca\5? \2\u00c9\u00c8\3\2\2\2\u00ca\u00cb\3\2"+
		"\2\2\u00cb\u00c9\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd"+
		"\u00cf\7\60\2\2\u00ce\u00d0\5? \2\u00cf\u00ce\3\2\2\2\u00d0\u00d1\3\2"+
		"\2\2\u00d1\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d3\3\2\2\2\u00d3"+
		"\u00d5\7\60\2\2\u00d4\u00d6\5? \2\u00d5\u00d4\3\2\2\2\u00d6\u00d7\3\2"+
		"\2\2\u00d7\u00d5\3\2\2\2\u00d7\u00d8\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9"+
		"\u00db\7\60\2\2\u00da\u00dc\5? \2\u00db\u00da\3\2\2\2\u00dc\u00dd\3\2"+
		"\2\2\u00dd\u00db\3\2\2\2\u00dd\u00de\3\2\2\2\u00de.\3\2\2\2\u00df\u00e1"+
		"\5? \2\u00e0\u00df\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00e0\3\2\2\2\u00e2"+
		"\u00e3\3\2\2\2\u00e3\u00eb\3\2\2\2\u00e4\u00e6\7/\2\2\u00e5\u00e7\5? "+
		"\2\u00e6\u00e5\3\2\2\2\u00e7\u00e8\3\2\2\2\u00e8\u00e6\3\2\2\2\u00e8\u00e9"+
		"\3\2\2\2\u00e9\u00eb\3\2\2\2\u00ea\u00e0\3\2\2\2\u00ea\u00e4\3\2\2\2\u00eb"+
		"\60\3\2\2\2\u00ec\u00ee\5? \2\u00ed\u00ec\3\2\2\2\u00ee\u00f1\3\2\2\2"+
		"\u00ef\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0\u00f2\3\2\2\2\u00f1\u00ef"+
		"\3\2\2\2\u00f2\u00f4\7\60\2\2\u00f3\u00f5\5? \2\u00f4\u00f3\3\2\2\2\u00f5"+
		"\u00f6\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u0106\3\2"+
		"\2\2\u00f8\u00fc\7/\2\2\u00f9\u00fb\5? \2\u00fa\u00f9\3\2\2\2\u00fb\u00fe"+
		"\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd\u00ff\3\2\2\2\u00fe"+
		"\u00fc\3\2\2\2\u00ff\u0101\7\60\2\2\u0100\u0102\5? \2\u0101\u0100\3\2"+
		"\2\2\u0102\u0103\3\2\2\2\u0103\u0101\3\2\2\2\u0103\u0104\3\2\2\2\u0104"+
		"\u0106\3\2\2\2\u0105\u00ef\3\2\2\2\u0105\u00f8\3\2\2\2\u0106\62\3\2\2"+
		"\2\u0107\u010f\7)\2\2\u0108\u0109\7^\2\2\u0109\u010e\7)\2\2\u010a\u010b"+
		"\7^\2\2\u010b\u010e\7^\2\2\u010c\u010e\13\2\2\2\u010d\u0108\3\2\2\2\u010d"+
		"\u010a\3\2\2\2\u010d\u010c\3\2\2\2\u010e\u0111\3\2\2\2\u010f\u0110\3\2"+
		"\2\2\u010f\u010d\3\2\2\2\u0110\u0112\3\2\2\2\u0111\u010f\3\2\2\2\u0112"+
		"\u0113\7)\2\2\u0113\64\3\2\2\2\u0114\u0115\5i\65\2\u0115\u0116\5e\63\2"+
		"\u0116\u0117\5k\66\2\u0117\u0118\5K&\2\u0118\u0120\3\2\2\2\u0119\u011a"+
		"\5M\'\2\u011a\u011b\5C\"\2\u011b\u011c\5Y-\2\u011c\u011d\5g\64\2\u011d"+
		"\u011e\5K&\2\u011e\u0120\3\2\2\2\u011f\u0114\3\2\2\2\u011f\u0119\3\2\2"+
		"\2\u0120\66\3\2\2\2\u0121\u0126\5A!\2\u0122\u0125\5A!\2\u0123\u0125\5"+
		"? \2\u0124\u0122\3\2\2\2\u0124\u0123\3\2\2\2\u0125\u0128\3\2\2\2\u0126"+
		"\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0135\3\2\2\2\u0128\u0126\3\2"+
		"\2\2\u0129\u012a\7$\2\2\u012a\u012f\5A!\2\u012b\u012e\5A!\2\u012c\u012e"+
		"\5? \2\u012d\u012b\3\2\2\2\u012d\u012c\3\2\2\2\u012e\u0131\3\2\2\2\u012f"+
		"\u012d\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u0132\3\2\2\2\u0131\u012f\3\2"+
		"\2\2\u0132\u0133\7$\2\2\u0133\u0135\3\2\2\2\u0134\u0121\3\2\2\2\u0134"+
		"\u0129\3\2\2\2\u01358\3\2\2\2\u0136\u0137\7\61\2\2\u0137\u0138\7\61\2"+
		"\2\u0138\u013c\3\2\2\2\u0139\u013b\13\2\2\2\u013a\u0139\3\2\2\2\u013b"+
		"\u013e\3\2\2\2\u013c\u013d\3\2\2\2\u013c\u013a\3\2\2\2\u013d\u0140\3\2"+
		"\2\2\u013e\u013c\3\2\2\2\u013f\u0141\7\17\2\2\u0140\u013f\3\2\2\2\u0140"+
		"\u0141\3\2\2\2\u0141\u0142\3\2\2\2\u0142\u0143\7\f\2\2\u0143\u0144\3\2"+
		"\2\2\u0144\u0145\b\35\2\2\u0145:\3\2\2\2\u0146\u0147\7\61\2\2\u0147\u0148"+
		"\7,\2\2\u0148\u014c\3\2\2\2\u0149\u014b\13\2\2\2\u014a\u0149\3\2\2\2\u014b"+
		"\u014e\3\2\2\2\u014c\u014d\3\2\2\2\u014c\u014a\3\2\2\2\u014d\u014f\3\2"+
		"\2\2\u014e\u014c\3\2\2\2\u014f\u0150\7,\2\2\u0150\u0151\7\61\2\2\u0151"+
		"\u0152\3\2\2\2\u0152\u0153\b\36\2\2\u0153<\3\2\2\2\u0154\u0155\t\2\2\2"+
		"\u0155\u0156\3\2\2\2\u0156\u0157\b\37\2\2\u0157>\3\2\2\2\u0158\u0159\t"+
		"\3\2\2\u0159@\3\2\2\2\u015a\u015b\t\4\2\2\u015bB\3\2\2\2\u015c\u015d\t"+
		"\5\2\2\u015dD\3\2\2\2\u015e\u015f\t\6\2\2\u015fF\3\2\2\2\u0160\u0161\t"+
		"\7\2\2\u0161H\3\2\2\2\u0162\u0163\t\b\2\2\u0163J\3\2\2\2\u0164\u0165\t"+
		"\t\2\2\u0165L\3\2\2\2\u0166\u0167\t\n\2\2\u0167N\3\2\2\2\u0168\u0169\t"+
		"\13\2\2\u0169P\3\2\2\2\u016a\u016b\t\f\2\2\u016bR\3\2\2\2\u016c\u016d"+
		"\t\r\2\2\u016dT\3\2\2\2\u016e\u016f\t\16\2\2\u016fV\3\2\2\2\u0170\u0171"+
		"\t\17\2\2\u0171X\3\2\2\2\u0172\u0173\t\20\2\2\u0173Z\3\2\2\2\u0174\u0175"+
		"\t\21\2\2\u0175\\\3\2\2\2\u0176\u0177\t\22\2\2\u0177^\3\2\2\2\u0178\u0179"+
		"\t\23\2\2\u0179`\3\2\2\2\u017a\u017b\t\24\2\2\u017bb\3\2\2\2\u017c\u017d"+
		"\t\25\2\2\u017dd\3\2\2\2\u017e\u017f\t\26\2\2\u017ff\3\2\2\2\u0180\u0181"+
		"\t\27\2\2\u0181h\3\2\2\2\u0182\u0183\t\30\2\2\u0183j\3\2\2\2\u0184\u0185"+
		"\t\31\2\2\u0185l\3\2\2\2\u0186\u0187\t\32\2\2\u0187n\3\2\2\2\u0188\u0189"+
		"\t\33\2\2\u0189p\3\2\2\2\u018a\u018b\t\34\2\2\u018br\3\2\2\2\u018c\u018d"+
		"\t\35\2\2\u018dt\3\2\2\2\u018e\u018f\t\36\2\2\u018fv\3\2\2\2\u0190\u0191"+
		"\13\2\2\2\u0191x\3\2\2\2\32\2\u00cb\u00d1\u00d7\u00dd\u00e2\u00e8\u00ea"+
		"\u00ef\u00f6\u00fc\u0103\u0105\u010d\u010f\u011f\u0124\u0126\u012d\u012f"+
		"\u0134\u013c\u0140\u014c\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}